const express=require(`express`)
const resourceController = require(`../../controller/rbac/resource.controller`)
const roleController = require("../../controller/rbac/role.controller")
const { asyncHandler } = require("../../utils")
const { apiKeyCheck } = require("../../authentication/authUtils")
const { grantAccess } = require("../../middleware/rbac/rbac")
const router=express.Router()
router.use(asyncHandler(apiKeyCheck))
router.post(`/addresource`,grantAccess("RESOURCES","createAny"),asyncHandler(resourceController.addResource))
router.post(`/addrole`,grantAccess("ROLES","createAny"),asyncHandler(roleController.addRole))
router.get(`/listroles`,grantAccess("ROLES","readAny"),asyncHandler(roleController.listRoles))
router.get(`/listresources`,grantAccess("RESOURCES","readAny"),asyncHandler(resourceController.listResources))
router.post(`/addgrants`,asyncHandler(roleController.addGrants))
router.get(`/listrolesbyuser`,grantAccess("ROLES","readOwn"),asyncHandler(roleController.listRolesByUserId))
router.post(`/addactions`,asyncHandler(roleController.addActions))
module.exports=router